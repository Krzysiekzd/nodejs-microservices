version: "3.9"

services:
  mongodb:
    image: mongo:6
    volumes:
      - mongo_data:/data/db
    ports:
      - "9092:27017"
    networks:
      nodejs_network:
        ipv4_address: 172.21.0.2

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "9093:5672"
      - "9094:15672"
    networks:
      nodejs_network:
        ipv4_address: 172.21.0.3
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "9091:5432"
    networks:
      nodejs_network:
        ipv4_address: 172.21.0.4

  nginx:
    image: nginx:alpine
    depends_on:
      - api-gateway
    ports:
      - "90:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      nodejs_network:
        ipv4_address: 172.21.0.5

  user-service:
    build: ./user-service
    restart: always
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/userdb
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    ports:
      - "3010:3000"
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      nodejs_network:
        ipv4_address: 172.21.0.6

  product-service:
    build: ./product-service
    restart: always
    environment:
      MONGODB_URL: mongodb://mongodb:27017/product-db
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672

    ports:
      - "3004:3000"
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      nodejs_network:
        ipv4_address: 172.21.0.7

  product-event-listener:
    build: ./product-event-listener
    restart: always
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    ports:
      - "30014:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      nodejs_network:
        ipv4_address: 172.21.0.12

  order-service:
    build: ./order-service
    restart: always
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/orders
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    ports:
      - "3009:3000"
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      nodejs_network:
        ipv4_address: 172.21.0.8

  order-event-listener:
    build: ./order-event-listener
    restart: always
    ports:
      - "3013:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      nodejs_network:
        ipv4_address: 172.21.0.13

  inventory-service:
    build: ./inventory-service
    restart: always
    environment:
      MONGO_URI: mongodb://mongodb:27017/inventory
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    ports:
      - "3007:3000"
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      nodejs_network:
        ipv4_address: 172.21.0.9

  notification-service:
    build: ./notification-service
    restart: always
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    ports:
      - "3005:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      nodejs_network:
        ipv4_address: 172.21.0.10

  api-gateway:
    build: ./api-gateway
    environment:
      USER_SERVICE_URL: http://user-service:3010
      PRODUCT_SERVICE_URL: http://product-service:3004
      ORDER_SERVICE_URL: http://order-service:3009
      INVENTORY_SERVICE_URL: http://inventory-service:3007
      NOTIFICATION_SERVICE_URL: http://notification-service:3005
    ports:
      - "3011:3000"
    depends_on:
      - user-service
      - product-service
      - order-service
      - inventory-service
      - notification-service
    networks:
      nodejs_network:
        ipv4_address: 172.21.0.11

networks:
  nodejs_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/24

volumes:
  postgres_data:
  mongo_data:
  rabbitmq_data: